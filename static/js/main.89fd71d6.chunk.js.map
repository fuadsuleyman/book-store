{"version":3,"sources":["components/error-indicator/error.png","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","components/bookstore-service-context/bookstore-service-context.js","reducers/book-list.js","reducers/shopping-cart.js","reducers/index.js","store.js","components/book-list-item/index.js","components/book-list-item/book-list-item.js","actions/actions.js","components/hoc/index.js","components/hoc/with-bookstore-service.js","components/spinner/index.js","components/spinner/spinner.js","components/book-list/book-list.js","components/book-list/index.js","components/scroll/index.js","components/scroll/scroll.js","components/pages/home-page.js","components/shopping-cart-table/index.js","components/shopping-cart-table/shopping-cart-table.js","components/pages/card-page.js","components/shop-header/shop-header.js","components/app/index.js","components/app/App.js","index.js","services/bookstore-service.js"],"names":["module","exports","ErrorIndicator","className","src","icon","alt","ErrorBoundry","state","hasError","error","info","this","setState","props","children","Component","React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","updateBookList","action","undefined","books","loading","type","payload","bookList","updateCartItems","cartItems","item","idx","count","slice","updateCartItem","book","quantity","id","title","total","price","updateOrder","bookId","shoppingCart","find","itemIndex","findIndex","newItem","console","log","orderTotal","reduce","accum","updateShoppingCart","reducer","store","createStore","BookListItem","onAddedToCart","author","coverImage","onClick","bookAddedToCart","withBookstoreService","Wrapped","bookstoreService","Spinner","BookList","map","key","BookListContainer","fetchBooks","connect","dispatch","ownProps","getBooks","then","data","catch","err","Scroll","style","overflowY","height","HomePage","ShoppingCartTable","items","onIncrease","onDecreace","onDelete","CardPage","numItems","to","App","role","path","exact","component","Promise","resolve","reject","setTimeout","ReactDOM","render","value","document","getElementById"],"mappings":"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","file":"static/js/main.89fd71d6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.955a1270.png\";","import ErrorIndicator from './error-indicator';\nexport default ErrorIndicator;","import React from 'react';\nimport './error-indicator.css';\nimport icon from './error.png'\n\nconst ErrorIndicator = () => {\n    return (\n      <div className=\"error-indicator\">\n        <img src={icon} alt=\"error icon\" className=\"error-img\"/>\n        <span className=\"boom\">OOOPS!</span>\n        <span>\n          something has gone terribly wrong\n        </span>\n        <span>\n          (please refresh page)\n        </span>\n      </div>\n    );\n  };\n  \n  export default ErrorIndicator;","import ErrorBoundry from './error-boundry';\n\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport ErrorIndicator from '../error-indicator';\n\n\nexport default class ErrorBoundry extends Component{\n    state = {\n        hasError: false\n    }\n    // error ve infonu inspect-de gormek olar\n    // bir component-de ashibka olsa diger componentler calisacaq\n    componentDidCatch(error, info) {\n        this.setState({\n            hasError: true\n        })\n    }\n    render(){\n\n        if(this.state.hasError){\n            return <ErrorIndicator/>\n        }\n        return(\n            this.props.children\n        )\n    }\n}\n","import React from 'react';\n\n// service-in butun componentlerde elcatan olmasi ucun context-den istifade edirik\n// Provideri App.js de import edib istifade edirik\n// Comsumer-i ise ... faylinda\n\nconst {\n    Provider: BookstoreServiceProvider,\n    Consumer: BookstoreServiceConsumer\n} = React.createContext();\n\nexport {\n    BookstoreServiceProvider,\n    BookstoreServiceConsumer\n};\n","\nconst updateBookList = (state, action) => {\n\n    if (state === undefined) {\n        return {\n            books: [],\n            loading: true,\n            error: null\n        }\n    }\n    switch (action.type) {\n        case 'FETCH_BOOKS_SUCCESS':\n            return {\n                // birbasa state ile islemediyimiz ucun asagdakina ehtiyac yodu\n                //...state,\n                books: action.payload,\n                loading: false,\n                error: null\n            }\n        case 'FETCH_BOOKS_REQUEST':\n            return {\n                // birbasa state ile islemediyimiz ucun asagdakina ehtiyac yodu\n                // ...state,\n                books: [],\n                loading: true,\n                error: null\n            }\n        case 'FETCH_BOOKS_FAILURE':\n            return {\n                // birbasa state ile islemediyimiz ucun asagdakina ehtiyac yodu\n                // ...state,\n                books: [],\n                loading: false,\n                error: true\n            }\n        default:\n            return state.bookList;\n    };\n}\n\nexport default updateBookList;","const updateCartItems = (cartItems, item, idx) => {\n\n    if (item.count === 0) {\n        return [\n            ...cartItems.slice(0, idx),\n            ...cartItems.slice(idx + 1)\n        ]\n    }\n\n    // yeni massivde yoxdu bele indexli element, yeni bosdu massiv\n    if (idx === -1) {\n        return [\n            ...cartItems,\n            item\n        ];\n    }\n    return [\n        ...cartItems.slice(0, idx),\n        item,\n        ...cartItems.slice(idx + 1)\n    ]\n}\n\n// quantity movzusu super meseledi, eyni funq-siya hem + hem - isini gorur\nconst updateCartItem = (book, item = {}, quantity) => {\n\n    const {\n        id = book.id,\n        count = 0,\n        title = book.title,\n        total = 0\n    } = item;\n\n    return {\n        id,\n        title,\n        count: count + quantity,\n        total: total + book.price * quantity,\n    }\n}\n\nconst updateOrder = (state, bookId, quantity) => {\n\n    const { bookList: { books }, shoppingCart: { cartItems } } = state;\n\n    // asagidaki kodla knopkasi basilar kitabi elde edirik\n    let book = books.find((book) => bookId === book.id);\n\n    // cartItemsin hansi elementi oldugunu tapir asagidaki kod\n    let itemIndex = cartItems.findIndex(({ id }) => id === bookId);\n    let item = cartItems[itemIndex];\n\n    let newItem = updateCartItem(book, item, quantity);\n    //orderTotal = updateCartItem.orderTotal;\n    // // asagida shoppingCart-in umumi veziyyetini hemde cartItems arrayinin\n    // // evvelki veziyyetini qoruyub saxlayiriq ve oz elavemizi edirik\n    console.log(updateCartItem(book, item, quantity));\n    console.log(updateCartItems(cartItems, newItem, itemIndex));\n\n    \n    return {\n        orderTotal: updateCartItems(cartItems, newItem, itemIndex).reduce((accum, item) => accum + item.total, 0),\n        cartItems: updateCartItems(cartItems, newItem, itemIndex)\n    }\n}\n\nconst updateShoppingCart = (state, action) => {\n\n    if (state === undefined) {\n        return {\n            cartItems: [],\n            orderTotal: 0\n        }\n    }\n\n    switch (action.type) {\n        case 'BOOK_ADDED_TO_CART':\n            return updateOrder(state, action.payload, 1);\n\n        case 'BOOK_DELETE_FROM_CART':\n            return updateOrder(state, action.payload, -1);\n\n        case 'ALL_BOOK_DELETE_FROM_CART':\n            // asagidaki funqsiya hansi item-de delete knopkasi basildigini tapir\n            const item = state.shoppingCart.cartItems.find(({ id }) => id === action.payload);\n\n            // quantiti hissesine cartdaki itemin count sayini veririk menfi ile\n            // ve 0 dusen kimi silinir\n            return updateOrder(state, action.payload, -item.count);\n        default:\n            return state.shoppingCart;\n    };\n}\n\nexport default updateShoppingCart;","import updateBookList from './book-list';\nimport updateShoppingCart from './shopping-cart';\n\n\n// setState-le state-i deyishmeyin reducer-le deyismekde esas ferq budurki,\n// reucer-de misalcun ...state hissesini yazmasaydiq, hemin hisse itecekdi\n// ya da ... operatordan istifade etmeden yeniden yazmaq lazimdi obj. elementlerini\nconst reducer = (state, action) => {\n\n    // check etmek ucun\n    console.log(action.type);\n    return {\n        bookList: updateBookList(state, action),\n        shoppingCart: updateShoppingCart(state, action)\n    }\n\n}\n\nexport default reducer;\n\n","import { createStore } from 'redux';\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\n\nexport default store;","import BookListItem from './book-list-item';\nexport default BookListItem;","import React from 'react';\nimport './book-list-item.css';\n\nconst BookListItem = ({ book, onAddedToCart }) => {\n\n    const { title, author, price, coverImage } = book;\n\n    return (\n        <div className=\"book-list-item\">\n            <div className=\"book-cover\">\n                <img src={coverImage} alt=\"cover\" />\n            </div>\n            <div className=\"book-details\">\n                <span className=\"book-title\">{title}</span>\n                <div className=\"book-author\">{author}</div>\n                <div className=\"book-price\">${price}</div>\n                <button\n                    className=\"btn btn-info add-to-cart\"\n        // bu asagidaki eventlist- BookList-de render oldugu ucun orda yazilir funq\n                    onClick={onAddedToCart}>\n                    Add to cart\n        </button>\n            </div>\n        </div>\n    )\n}\n\nexport default BookListItem;\n","// action creators\nconst booksLoaded = (newBooks) => {\n    return (\n        {\n            type: 'FETCH_BOOKS_SUCCESS',\n            payload: newBooks\n        });\n};\n\nconst booksRequested = () => {\n    return (\n        {\n            type: 'FETCH_BOOKS_REQUEST'\n        });\n};\n\nconst booksError = (error) => {\n    return (\n        {\n            type: 'FETCH_BOOKS_FAILURE',\n            payload: error\n        });\n};\n\nconst bookAddedToCart = (bookId) => {\n    return (\n        {\n            type: 'BOOK_ADDED_TO_CART',\n            payload: bookId\n        }\n    )\n}\n\nconst bookRemoveFromCart = (bookId) => {\n    return (\n        {\n            type: 'BOOK_DELETE_FROM_CART',\n            payload: bookId\n        }\n    )\n}\n\nconst allBookRemoveFromCart = (bookId) => {\n    return (\n        {\n            type: 'ALL_BOOK_DELETE_FROM_CART',\n            payload: bookId\n        }\n    )\n}\n\nexport {\n    booksLoaded,\n    booksRequested,\n    booksError,\n    bookAddedToCart,\n    bookRemoveFromCart,\n    allBookRemoveFromCart\n}","import withBookstoreService from './with-bookstore-service';\nexport default withBookstoreService;","import React from 'react';\nimport { BookstoreServiceConsumer } from '../bookstore-service-context';\n\n// hoc\n// birinci argument componentdi, amma ikinci argument service-deki konkret methodlardi\nconst withBookstoreService = () => (Wrapped) => {\n    return (props) => {\n        return (\n            <BookstoreServiceConsumer>\n                {\n                    (bookstoreService) => {\n                        return (\n                            <Wrapped {...props}\n                                bookstoreService={bookstoreService} />\n                        )\n                    }\n                }\n            </BookstoreServiceConsumer>\n        )\n    }\n}\n\nexport default withBookstoreService;","import Spinner from './spinner';\nexport default Spinner;","import React from 'react';\nimport './spinner.css';\n\nconst Spinner = () => {\n    return (\n        <div className=\"ids-css\">\n            <div className=\"loadingio-spinner-spin-ggjbnq9lyds\"><div className=\"ldio-a14uivnmz8d\">\n                <div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div>\n            </div></div>\n        </div>\n\n    )\n}\n\nexport default Spinner;","import React, { Component } from 'react';\nimport BookListItem from '../book-list-item';\nimport './book-list.css';\n// props-lari bu comp-de istifade ede bilmeyimiz ucun lazimdi\nimport { connect } from 'react-redux';\nimport { booksLoaded, booksRequested, booksError, bookAddedToCart } from '../../actions/actions';\nimport withBookstoreService from '../hoc';\nimport Spinner from '../spinner';\nimport ErrorIndicator from '../error-indicator';\n\n// best practice-e gore logika ve view ayri olmalidi\nconst BookList = ({ books, onAddedToCart }) => {\n    return (\n        <ul className=\"book-list\">\n\n            {\n                books.map((book) => {\n                    return (\n                        <li key={book.id}>\n                            <BookListItem\n                                book={book}\n                                onAddedToCart={()=> onAddedToCart(book.id)}\n                            />\n                        </li>\n                    )\n                })\n            }\n        </ul>\n    )\n}\n\n// best prak. deyirki components papkasinin altinda container adli\n// papkada olsun redux componentler, sonra ederem\nclass BookListContainer extends Component {\n\n    componentDidMount() {\n\n        this.props.fetchBooks();\n\n        // asagidaki didMountun ilk variantidi, burda DidMount cox isle mesguldu!\n        // asag 2setrle service-den info goturduk\n        // const { bookstoreService, booksLoaded, booksRequested, booksError } = this.props;\n        // booksRequested();\n        // bookstoreService.getBooks()\n        //     .then((data) => booksLoaded(data))\n        //     .catch((err) => booksError(err))\n    };\n\n    // data ve actionu birlesdiririk ve actiondan cixan melumati render istifade edir\n    // mapDispatchToProps bu komek edirki booksLoaded elde edirik props-la\n    // service-de Promise qaytaran funq yazdigimiz ucun booksloaded-i yuxarida cagirdiq \n    //this.props.booksLoaded(data);\n\n\n    render() {\n\n        // destruct\n        // bu olmasa asagida this.props.books yazmali idik\n        const { books, loading, error, onAddedToCart } = this.props;\n\n        //const spinner = loading ? <Spinner/> : null;\n\n        // spinneri bu mentiqle gosteririk, loading deyerini store-dan aliram\n        if (loading) {\n            return <Spinner />;\n        }\n\n        if (error) {\n            return <ErrorIndicator />\n        }\n\n        return (\n            <BookList books={books}\n                onAddedToCart={onAddedToCart} />\n        )\n\n    }\n};\n\n// reducer-den melumatlari alib verir bura,yuxarida istifade olunur\n// state.books yazmaqla gotururuk melumatlari reducerden\n// bu funq. bize hansi props-larin lazim oldugunu deyir\n// basqa sozle reduxStore-dan hansi melumati cekmek istediyimizi deyirik\nconst mapStateToProps = (state) => {\n    return {\n        books: state.bookList.books,\n        loading: state.bookList.loading,\n        error: state.bookList.error\n    }\n}\n\n// mapDisToPrps-un funqsiya variantidi, burda en maraqli meqam boostoreservice-e goturmekdi\n// asagida hoc obertka hissesi ele qurulubki\n// connect withBookstoreService()-daki melumatlari gore bilir\n// withBookstoreService()-daki melumatlari ownProps-la gotururuk\n// bu asagidaki funqsiyani actions-a kocurmek olar, eger diger comp-larda istifade edecekse\n// nece kecirmek haqqinda 143 sayli video \n// mapDispatchToProps funqsiyasinin temasi BooksContainer componenti iledi,\n// burda yazilani ishletmek ucun BooksContainer-de qebul etmek lazimdi\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    const { bookstoreService } = ownProps;\n    return {\n        fetchBooks: () => {\n            dispatch(booksRequested());\n            bookstoreService.getBooks()\n                .then((data) => dispatch(booksLoaded(data)))\n                .catch((err) => dispatch(booksError(err)))\n        },\n        // burdaki suqsiyalarin reduce-e gedib catmasini yoxlamaq ucun\n        // reducer-de console.log edib, action type capa verirem\n        onAddedToCart: (id) => dispatch(bookAddedToCart(id))\n    }\n}\n\n// mapStateToProps-la elde etdik state-i, sonra onunla hansi deyisikliyi olacagini\n// bu funq teyin edir, hansi actionlari bu component istifade edeceyini\n// bu asagidaki mapDisToPro funqsiyasinin object variantidi\n// yuxarida mapDisToProps-un funqsiya variantini yaziram\n// bu object formasi yuxarida DidMount-da comment etdiyin hisse ile ishleyirdi\n// const mapDispatchToProps = {\n//     booksLoaded,\n//     booksRequested,\n//     booksError\n// }\n\nexport default withBookstoreService()\n    (connect(mapStateToProps, mapDispatchToProps)(BookListContainer)\n    );","import BookList from './book-list';\nexport default BookList;","import Scroll from './scroll';\nexport default Scroll;","import React from 'react';\n\n\nconst Scroll = (props) => {\n    return (\n        <div className='scroll' style={{ overflowY: 'scroll', height: '800px' }}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Scroll;","import React from 'react';\nimport BookList from '../book-list';\nimport Scroll from '../scroll';\n\nconst HomePage = () => {\n\n    return (\n        <div>\n            <Scroll>\n                <BookList />\n            </Scroll>\n        </div>\n    )\n}\n\nexport default HomePage;","import ShoppingCartTable from './shopping-cart-table';\nexport default ShoppingCartTable;","import React from 'react';\nimport './shopping-cart-table.css';\nimport { connect } from 'react-redux';\nimport { bookAddedToCart, bookRemoveFromCart, allBookRemoveFromCart } from '../../actions/actions';\n\nconst ShoppingCartTable = ({ items, orderTotal, onIncrease, onDecreace, onDelete }) => {\n\n    const renderRow = (item, idx) => {\n        const { id, title, count, total } = item;\n        return (\n            <tr key={id}>\n                <td>{idx+1}</td>\n                <td>{title}</td>\n                <td>{count}</td>\n                <td>${total}</td>\n                <td>\n                    <button\n                        className=\"btn btn-outline-danger btn-sm float-right\"\n                        onClick={() => onDelete(id)}>\n                        <i className=\"fa fa-trash-o\" />\n                    </button>\n                    <button\n                        className=\"btn btn-outline-success btn-sm float-right\"\n                        onClick={() => onIncrease(id)}>\n                        <i className=\"fa fa-plus-circle\" />\n                    </button>\n                    <button\n                        className=\"btn btn-outline-warning btn-sm float-right\"\n                        onClick={() => onDecreace(id)}>\n                        <i className=\"fa fa-minus-circle\" />\n                    </button>\n                </td>\n            </tr>\n        )\n    }\n    return (\n        <div className='shopping-cart-table'>\n            <h2>Your Orders</h2>\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Item</th>\n                        <th>Count</th>\n                        <th>Price</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        items.map(renderRow)\n                    }\n                </tbody>\n            </table>\n            <div className=\"total\">\n                Total: ${orderTotal}\n            </div>\n        </div>\n    );\n};\n\n// component artiq goturub bunlari istifade ede biler\nconst mapStateToProps = (state) => {\n    return{\n        items: state.shoppingCart.cartItems,\n        orderTotal: state.shoppingCart.orderTotal\n    }\n    \n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onIncrease: (id) => dispatch(bookAddedToCart(id)),\n        onDecreace: (id) => dispatch(bookRemoveFromCart(id)),\n        onDelete: (id) => dispatch(allBookRemoveFromCart(id))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTable);","import React from 'react';\nimport ShoppingCartTable from '../shopping-cart-table';\n\nconst CardPage = (props) => {\n    return (\n        <div>\n            <ShoppingCartTable />\n        </div>\n    )\n}\n\nexport default CardPage;\n\n\n// funq component-de bele istifade edirik store melumatini, yuxarida connect-i import edirik\n// const CardPage = ({books}) => {\n//     return(\n//         <div>\n//             <ul>\n//                 {\n//                     books.map((book) => {\n//                         return (\n//                             <li key={book.id}>\n//                                 {book.title}\n//                             </li>\n//                         )\n//                     })\n//                 }\n//             </ul>\n//         </div>\n//     )\n// }\n\n// const mapStateToProps = (state) => {\n//     return {\n//         books: state.books\n//     }\n// }\n\n// export default connect(mapStateToProps)(CardPage);","import React from 'react';\nimport './shop-header.css';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n\nconst ShopHeader = ({ numItems, orderTotal }) => {\n    return (\n        <header className=\"shop-header row\">\n\n            <Link to='/book-store'>\n                <div className=\"logo text-dark\">ReStore</div>\n            </Link>\n\n            <Link to='/book-store/card'>\n                <div className=\"shopping-cart\">\n                    <i className=\"cart-icon fa fa-shopping-cart\" />\n                    {numItems} items (${orderTotal})\n              </div>\n            </Link>\n\n        </header>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        orderTotal: state.shoppingCart.orderTotal,\n        numItems: state.shoppingCart.cartItems.reduce((accum, item) => accum + item.count, 0)\n    }\n}\n\nexport default connect(mapStateToProps)(ShopHeader);","import App from './App';\nexport default App;","import React from 'react';\nimport './app.css';\nimport { Route, Switch } from 'react-router-dom';\nimport { CardPage, HomePage } from '../pages';\nimport ShopHeader from '../shop-header/shop-header';\n\nconst App = () => {\n  return (\n    <main role='main' className='container'>\n      <ShopHeader numItems={5} total={145} />\n      <Switch>\n          <Route path='/book-store' exact component={HomePage} />\n          <Route path='/book-store/card' component={CardPage} />\n      </Switch>\n    </main>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport ErrorBoundry from './components/error-boundry';\nimport {BookstoreServiceProvider} from './components/bookstore-service-context';\nimport store from './store';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport App from './components/app';\nimport BookstoreService from './services/bookstore-service';\n\nconst bookstoreService = new BookstoreService();\n\nReactDOM.render(\n    <Provider store={store}>\n        <ErrorBoundry>\n            <BookstoreServiceProvider value={bookstoreService} >\n                <Router>\n                    <App />\n                </Router>\n            </BookstoreServiceProvider>\n        </ErrorBoundry>\n    </Provider>    ,\n    document.getElementById('root'));","export default class BookstoreService {\n\n        data = [\n            {\n                id: 1,\n                title: 'Secrets of Math',\n                author: 'Marry Croft',\n                price: 45,\n                coverImage: 'https://m.media-amazon.com/images/I/617LMuOkVWL._AC_UY218_.jpg'\n            },\n            {\n                id: 2,\n                title: 'How Begin to Programming',\n                author: 'Lary Soft',\n                price: 23,\n                coverImage: 'https://m.media-amazon.com/images/I/41T53nRtyoL._AC_UY218_.jpg'\n            },\n            {\n                id: 3,\n                title: 'Javascript Ninja',\n                author: 'Branden Eick',\n                price: 65,\n                coverImage: 'https://m.media-amazon.com/images/I/91ahAhFS-LL._AC_UY218_.jpg'\n            },\n            {\n                id: 4,\n                title: 'Speak in Java',\n                author: 'Will Smith',\n                price: 55,\n                coverImage: 'https://m.media-amazon.com/images/I/91xorHXzWbL._AC_UY218_.jpg' \n            },\n            {\n                id: 5,\n                title: 'React Native',\n                author: 'Tomash Zuckerberg',\n                price: 48,\n                coverImage: 'https://m.media-amazon.com/images/I/61iTwwX7vdL._AC_UL320_.jpg'\n            }\n            \n        ];\n        // real api-lerde melumat bu sekilde gelir, 0.7 saniye gecikme ile gelecek\n        // burda melumatlar dummy olaraq arraydan geldiyi ucun Promise\n        // if Math deyirki 4 defeden bir error goster\n        getBooks() {\n            return new Promise((resolve, reject) => {\n                setTimeout(() => {\n            \n                        resolve(this.data)\n                    \n                }, 700);\n            });\n        }\n    } \n\n    // asagidki kimi yazilis random olaraq error page-e gonderir, setTimeout-un icine yazanda\n    // if(Math.random() > 0.75) {\n    //     reject (new Error('Something bad happened'))\n    // }else {\n    //     resolve(this.data)\n    // }\n    \n        \n\n\n\n\n// REZERV-di istesen arrayi boyut\n// ,{\n            //     id: 3,\n            //     title: 'Javascript Ninja',\n            //     author: 'Branden Eick',\n            //     price: 65,\n            //     coverImage: 'https://m.media-amazon.com/images/I/91ahAhFS-LL._AC_UY218_.jpg'\n            // },\n            // {\n            //     id: 4,\n            //     title: 'Speak in Java',\n            //     author: 'Will Smith',\n            //     price: 55,\n            //     coverImage: 'https://m.media-amazon.com/images/I/91xorHXzWbL._AC_UY218_.jpg' \n            // },\n            // {\n            //     id: 5,\n            //     title: 'React Native',\n            //     author: 'Tomash Zuckerberg',\n            //     price: 48,\n            //     coverImage: 'https://m.media-amazon.com/images/I/61iTwwX7vdL._AC_UL320_.jpg'\n            // }"],"sourceRoot":""}